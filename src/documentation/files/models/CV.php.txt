<?php
/**
 * Created by PhpStorm.
 * User: Stephen
 * Date: 01/05/2016
 * Time: 17:09
 */

/**
 * namespace for cv model
 */
namespace StephenFinegan\models;

use Mattsmithdev\PdoCrud\DatabaseManager;
use Mattsmithdev\PdoCrud\DatabaseTable;

/**
 * CRUDS from a database table cvs, acts as an object for cvs.
 * Class CV
 * @package StephenFinegan\models
 */
class CV extends DatabaseTable
{
    /**
     * unique id
     * @var
     */
    private $id;

    /**
     * students firstname
     * @var
     */
    private $firstname;

    /**
     * students surname
     * @var
     */
    private $surname;

    /**
     * students email
     * @var
     */
    private $email;

    /**
     * students phone number
     * @var
     */
    private $number;

    /**
     * picture of student
     * @var
     */
    private $picture;

    /**
     * students address
     * @var
     */
    private $address;

    /**
     * students town
     * @var
     */
    private $town;

    /**
     * previous jobs of student
     * @var
     */
    private $previousJobs;

    /**
     * students qualifications
     * @var
     */
    private $qualifications;

    /**
     * returning the unique id
     * @return mixed
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * returning firsname
     * @return mixed
     */
    public function getFirstname()
    {
        return $this-> firstname;
    }

    /**
     * setting firsname
     * @param $firstname
     */
    public function setFirstname($firstname)
    {
        $this-> firstname= $firstname;
    }

    /**
     * returning surname
     * @return mixed
     */
    public function getSurname()
    {
        return $this->surname;
    }

    /**
     * setting surname
     * @param $surname
     */
    public function setSurname($surname)
    {
        $this-> surname= $surname;
    }

    /**
     * returning email
     * @return mixed
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * setting email
     * @param $email
     */
    public function setEmail($email)
    {
        $this-> email= $email;
    }

    /**
     * returning number
     * @return mixed
     */
    public function getNumber()
    {
        return $this->number;
    }

    /**
     * setting number
     * @param $number
     */
    public function setNumber($number)
    {
        $this-> number= $number;
    }

    /**
     * returning picture
     * @return mixed
     */
    public function getPicture()
    {
        return $this->picture;
    }

    /**
     * setting picture
     * @param $picture
     */
    public function setPicture($picture)
    {
        $this-> picture= $picture;
    }

    /**
     * returning address
     * @return mixed
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * setting address
     * @param $address
     */
    public function setAddress($address)
    {
        $this-> address= $address;
    }

    /**
     * returning town
     * @return mixed
     */
    public function getTown()
    {
        return $this->town;
    }

    /**
     * setting town
     * @param $town
     */
    public function setTown($town)
    {
        $this-> town= $town;
    }

    /**
     * returning previous jobs
     * @return mixed
     */
    public function getPreviousJobs()
    {
        return $this->previousJobs;
    }

    /**
     * setting previous jobs
     * @param $perviousJobs
     */
    public function setPreviousJobs($perviousJobs)
    {
        $this-> previousJobs= $perviousJobs;
    }

    /**
     * returning qualifications
     * @return mixed
     */
    public function getQualifications()
    {
        return $this->qualifications;
    }

    /**
     * setting qualifications
     * @param $qualifications
     */
    public function setQualifications($qualifications)
    {
        $this-> qualifications= $qualifications;
    }

    /**
     * adding the students cv into the database table cvs
     * @param Object $firstname
     * @param $surname
     * @param $email
     * @param $number
     * @param $picture
     * @param $address
     * @param $town
     * @param $previousJobs
     * @param $qualifications
     */
    public static function insert($firstname, $surname, $email, $number, $picture, $address, $town, $previousJobs, $qualifications)
    {
        $db = new DatabaseManager();
        $connection = $db->getDbh();

        $statement = $connection->prepare('INSERT into cvs (firstname, surname, email, number, picture, address, town, previousJobs, qualifications)
            VALUES (:firstname, :surname, :email, :number, :picture, :address, :town, :previousJobs, :qualifications)');
        $statement->bindParam(':firstname', $firstname, \PDO::PARAM_STR);
        $statement->bindParam(':surname', $surname, \PDO::PARAM_STR);
        $statement->bindParam(':email', $email, \PDO::PARAM_STR);
        $statement->bindParam(':number', $number, \PDO::PARAM_INT);
        $statement->bindParam(':picture', $picture, \PDO::PARAM_STR);
        $statement->bindParam(':address', $address, \PDO::PARAM_STR);
        $statement->bindParam(':town', $town, \PDO::PARAM_STR);
        $statement->bindParam(':previousJobs', $previousJobs, \PDO::PARAM_STR);
        $statement->bindParam(':qualifications', $qualifications, \PDO::PARAM_STR);
        $statement->execute();
    }

    /**
     * returning all information stored in sample cv database table
     * @return array
     */
    public static function getAllSampleCVS()
    {
        $db = new DatabaseManager();
        $connection = $db->getDbh();

        $statement = $connection->prepare('SELECT * from samplecvs');
        $statement->setFetchMode(\PDO::FETCH_CLASS, '\\Stephen\\Models\\CV');
        $statement->execute();

        $sampleCVS = $statement->fetchAll();

        return $sampleCVS;
    }

    /**
     * returning all information stored in the cvs database table
     * @return array
     */
    public static function getAll()
    {
        $db = new DatabaseManager();
        $connection = $db->getDbh();

        $statement = $connection->prepare('SELECT * from cvs');
        $statement->setFetchMode(\PDO::FETCH_CLASS, '\\Stephen\\Models\\CV');
        $statement->execute();

        $CVS = $statement->fetchAll();

        return $CVS;
    }

    /**
     * getting a cv by particular id
     * @param $id
     * @return mixed|null
     */
    public static function getOneById($id)
    {
        $db = new DatabaseManager();
        $connection = $db->getDbh();

        $statement = $connection->prepare('SELECT * from cvs WHERE id=:id');
        $statement->bindParam(':id', $id, \PDO::PARAM_INT);
        $statement->setFetchMode(\PDO::FETCH_CLASS, '\\StephenFinegan\\Models\\CV');
        $statement->execute();

        if ($CVS = $statement->fetch()) {
            return $CVS;
        } else {
            return null;
        }
    }

    /**
     * getting cv by a particular username
     * @param $username
     * @return mixed|null
     */
    public static function getOneByUsername($username)
    {
        $db = new DatabaseManager();
        $connection = $db->getDbh();

        $statement = $connection->prepare('SELECT * from cvs WHERE username=:username');
        $statement->bindParam(':username', $username, \PDO::PARAM_STR);
        $statement->setFetchMode(\PDO::FETCH_CLASS, '\\StephenFinegan\\Models\\CV');
        $statement->execute();

        if ($CVS = $statement->fetch()) {
            return $CVS;
        } else {
            return null;
        }
    }
}

